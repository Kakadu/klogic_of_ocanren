// Autogenerated file
@file:Suppress("FunctionName", "NonAsciiCharacters", "TestFunctionName")

package utils.JGS

import org.klogic.core.*
import org.klogic.utils.terms.LogicList
import org.klogic.utils.terms.LogicList.Companion.logicListOf
import org.klogic.utils.terms.Nil.nilLogicList
import org.klogic.utils.terms.plus
import utils.LogicInt
import utils.LogicOption
//import utils.None

typealias Decl = LogicInt
typealias JType = LogicInt

@Suppress("UNCHECKED_CAST")
fun <T: Term<T>> None(): LogicOption<T> = utils.None as LogicOption<T>

fun  pause(f: () -> Goal): Goal = { st -> ThunkStream { f()(st) } }

// There are 1 relations
fun <B : Term<B>, A : Term<A>> mapo(f: (Term<A>, Term<B>) -> Goal,
xs: Term<LogicList<A>>, ys: Term<LogicList<B>>): Goal =
conde(((xs `===` nilLogicList()) and (ys `===` nilLogicList())),
      freshTypedVars { h: Term<A>, tl: Term<LogicList<A>>, tmph: Term<B>,
        tmptl: Term<LogicList<B>> ->
      and(xs `===` (h + tl),
          ys `===` (tmph + tmptl),
          f(h, tmph),
          mapo(f, tl, tmptl))
      })
// Put epilogue here 
