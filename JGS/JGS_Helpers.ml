[@@@klogic.preamble
{|// Autogenerated file
@file:Suppress("FunctionName", "NonAsciiCharacters", "TestFunctionName"
  , "PropertyName", "ClassName", "LocalVariableName", "SpellCheckingInspection"
  , "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "NAME_SHADOWING"
  )

package utils.JGS_Helpres

import org.klogic.core.*
import org.klogic.utils.terms.*

import utils.JGS

context(RelationalContext)
fun  pause(f: () -> Goal): Goal = { st -> ThunkStream { f()(st) } }

context(RelationalContext)
fun <A: Term<A>> wc(f : (Term<A>) -> Goal ) : Goal = success
|}]

[@@@klogic.epilogue {|// Put epilogue here |}]

(*  *)
[@@@klogic.ident.mangle
[ "JGS.Jtype.var", "Var"; "JGS.Jtype.intersect", "Intersect"; "JGS.Jtype.null", "Null" ]]
(*  *)

[@@@klogic.type.mangle
[ (* "int OCanren.ilogic OCanren.Std.List.injected", "Term<LogicList<LogicInt>>"; *)
  (* "OCanren.goal", "Goal"; *)
  "JGS.Jtype.injected", "Jtype"
]]

open OCanren
open JGS

let only_classes_interfaces_and_arrays : int ilogic Jtype.injected -> goal =
 fun q ->
  fresh () (q =/= Jtype.null ()) (q =/= Jtype.intersect __) (q =/= Jtype.var __ __ __ __)
;;
